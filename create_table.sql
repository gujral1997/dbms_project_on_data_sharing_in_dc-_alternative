CREATE TABLE HUB(
		URL_ADDRESS VARCHAR2(100),
		NAME VARCHAR2(100) NOT NULL,
		DESCRIPTION VARCHAR2(1000) NOT NULL,
		COUNTRY VARCHAR2(100) NOT NULL,
		DATA_SHARED VARCHAR2(100) NOT NULL,
		MAX_USERS NUMBER(10) NOT NULL,
		RATING NUMBER(1) NOT NULL,
		CHECK(RATING BETWEEN 0 AND 5),
		PRIMARY KEY (URL_ADDRESS)
	);
CREATE TABLE HUB_LIST(
		URL_ADDRESS VARCHAR2(100),
		LIST_URL VARCHAR2(100),
		FOREIGN KEY(URL_ADDRESS) REFERENCES HUB(URL_ADDRESS) ON DELETE CASCADE,
		PRIMARY KEY (URL_ADDRESS,LIST_URL)
		);
		CREATE TABLE USERS(
				USER_ID VARCHAR2(100),
				USER_NAME VARCHAR2(100) NOT NULL,
				DESCRIPTION VARCHAR2(1000) NOT NULL,
				IP VARCHAR2(15) NOT NULL,
				CONNECTION_STATUS VARCHAR2(20) NOT NULL,
				CHECK(CONNECTION_STATUS IN ('CONNECTED','DISCONNECTED')),
				PRIMARY KEY (USER_ID)
			);
CREATE TABLE CONNECTION(
	URL_ADDRESS VARCHAR2(100),
	USER_ID VARCHAR2(100),
	FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
	PRIMARY KEY (URL_ADDRESS,USER_ID)
);
CREATE TABLE DATA(
	DATA_ID VARCHAR2(100),
	DATE_MODIFIED DATE NOT NULL,
	DESCRIPTION VARCHAR2(1000) NOT NULL,
	FILE_NAME VARCHAR2(15) NOT NULL,
	TYPE VARCHAR2(10) NOT NULL,
	FILE_SIZE VARCHAR2(20) NOT NULL,
	PRIMARY KEY (DATA_ID)
);
CREATE TABLE HASHING(
	DATA_ID VARCHAR2(100),
	USER_ID VARCHAR2(100),
	FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
	FOREIGN KEY(DATA_ID) REFERENCES DATA(DATA_ID) ON DELETE CASCADE,
	PRIMARY KEY (DATA_ID,USER_ID)
);
CREATE TABLE UPLOADS(
	DATA_ID VARCHAR2(100),
	USER_ID VARCHAR2(100),
	FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
	FOREIGN KEY(DATA_ID) REFERENCES DATA(DATA_ID) ON DELETE CASCADE,
	REMAINING_TIME VARCHAR2(100) NOT NULL,
	AVERAGE_SPEED VARCHAR2(20) NOT NULL,
	CRC_CHECKED VARCHAR2(5),
	CHECK(CRC_CHECKED IN ('YES','NO')),
	PRIMARY KEY (DATA_ID,USER_ID)
);
CREATE TABLE DOWNLOADS(
	DATA_ID VARCHAR2(100),
	USER_ID VARCHAR2(100),
	FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
	FOREIGN KEY(DATA_ID) REFERENCES DATA(DATA_ID) ON DELETE CASCADE,
	REMAINING_TIME VARCHAR2(100) NOT NULL,
	AVERAGE_SPEED VARCHAR2(20) NOT NULL,
	CRC_CHECKED VARCHAR2(5),
	CHECK(CRC_CHECKED IN ('YES','NO')),
	PRIMARY KEY (DATA_ID,USER_ID)
);
